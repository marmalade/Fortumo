#
# This extension allows paying by SMS using Fortumo service. It works on Android.
# 
# It had been tested only with non-consumable services but should work with consumable services.
# 
# To make Fortumo work place this in Android manifest inside your "application" markers:
# 		<receiver android:name="com.fortumo.android.BillingSMSReceiver">
# 			<intent-filter>
# 				<action android:name="android.provider.Telephony.SMS_RECEIVED" />
# 			</intent-filter>
# 		</receiver>
# 		<service android:name="com.fortumo.android.FortumoService" />
# 		<service android:name="com.fortumo.android.StatusUpdateService" />
# 		<activity android:name="com.fortumo.android.FortumoActivity" android:theme="@android:style/Theme.Translucent.NoTitleBar"/>
#     
# 
# 		<!-- To support Pay-by-Mobile widget fallback for devices without a SIM card (starting from 8.0) -->
# 		<activity android:configChanges="orientation|keyboardHidden" android:name="com.fortumo.android.FortumoActivity" android:theme="@android:style/Theme.Translucent.NoTitleBar" />
# 		<activity android:configChanges="orientation|keyboardHidden" android:name="com.fernsblossom.PayActivity" android:theme="@android:style/Theme.Translucent.NoTitleBar" />
# 
# Fortumo needs following permissions:
# <uses-permission android:name="android.permission.INTERNET" />
# <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
# <uses-permission android:name="android.permission.READ_PHONE_STATE" />
# <uses-permission android:name="android.permission.RECEIVE_SMS" />
# <uses-permission android:name="android.permission.SEND_SMS" />
# 
# Put them in your AndroidManifest.xml
# 

callbacks

include:
#include <s3eTypes.h>
#include <vector>
#include <string>

/**
 * Defines message status. Check Fortumo Java documentation for full explanation.
*/
typedef enum FortumoMessageStatus {
	FORTUMO_MESSAGE_STATUS_BILLED=0,
	FORTUMO_MESSAGE_STATUS_FAILED=1,
	FORTUMO_MESSAGE_STATUS_NOT_SENT=2,
	FORTUMO_MESSAGE_STATUS_PENDING=3
} FortumoMessageStatus ;

/**
 * Defines Fortumo response for payment attempt.
*/
struct ReceiveInfo {
	FortumoMessageStatus billingStatus;
	char creditAmount[256];
	char creditName[256];
	long messageId;
	char paymentCode[256];
	char priceAmount[256];
	char priceCurrency[256];
	char productName[256];
	char serviceId[256];
	char SKU[256];
	char userId[256];
};
/**
 * Defines callbacks.
*/
typedef enum FortumoCallback {
	FORTUMO_RECEIVE_CALLBACK,
	FORTUMO_CALLBACK_MAX,
} FortumoCallback;

functions:
/**
 * Running this function starts SMS payment. It opens Fortumo's dialog box and starts Fortumo's Activity.
 *
 * To receive info about payment register FORTUMO_RECEIVE_CALLBACK. systemData passed to callback is ReceiveInfo structure.
 *
 * @param isConsumable true if service is consumable good
 * @param creditsMultiplier multiplier in percent. Should be set for 100 if you want to give normal amount of credits.
 * @param displayString String displayed as pop-up title.
 * @param productName Product name - as specified in Fortumo portal.
 * @param serviceId Service Id - shown at Fortumo portal.
 * @param serviceSecret Service secret - shown at Fortumo portal.
 * @param SKU SKU used by service user.
*/
s3eResult FortumoRequestPayment(bool isConsumable,int creditsMultiplier,const char* displayString,const char* productName,const char* serviceId,const char* serviceSecret,const char* SKU) S3E_RESULT_ERROR

/**
 * Terminates Fortumo.
*/
void FortumoTerminate() void

/**
 * Initialises Fortumo.
*/
s3eResult FortumoInit() S3E_RESULT_ERROR

append:

