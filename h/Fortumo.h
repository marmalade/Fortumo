/*
 * (C) 2001-2012 Marmalade. All Rights Reserved.
 *
 * This document is protected by copyright, and contains information
 * proprietary to Marmalade.
 *
 * This file consists of source code released by Marmalade under
 * the terms of the accompanying End User License Agreement (EULA).
 * Please do not use this program/source code before you have read the
 * EULA and have agreed to be bound by its terms.
 */
/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
#ifndef S3E_EXT_FORTUMO_H
#define S3E_EXT_FORTUMO_H

#include <s3eTypes.h>

struct Fortumo_PaymentRequest;
struct Fortumo_PaymentResponse;

struct Fortumo_ServiceRequest;
struct Fortumo_ServiceResponse;

enum Fortumo_BillingStatus {
   Fortumo_BillingStatus_NotSent              = 0,
   Fortumo_BillingStatus_Pending              = 1,
   Fortumo_BillingStatus_Billed               = 2,
   Fortumo_BillingStatus_Failed               = 3,
   Fortumo_BillingStatus_UseAlternativeMethod = 4
};

enum Fortumo_ServiceStatus {
	Fortumo_ServiceStatus_Unknown     = 0,
	Fortumo_ServiceStatus_Available   = 1,
	Fortumo_ServiceStatus_Unavailable = 2
};

typedef void (*Fortumo_Payment_Callback)(Fortumo_PaymentResponse* response, void* userData);
typedef void (*Fortumo_Service_Callback)(Fortumo_ServiceResponse* response, void* userData);
// \cond HIDDEN_DEFINES
S3E_BEGIN_C_DECL
// \endcond

/**
 * Returns S3E_TRUE if the Fortumo extension is available.
 */
s3eBool FortumoAvailable();

void Fortumo_SetLoggingEnabled(s3eBool loggingEnabled);

void Fortumo_SetStateChangeListener(Fortumo_Payment_Callback callback, void* userData);

void Fortumo_FindPayment(Fortumo_PaymentRequest* request, Fortumo_Payment_Callback callback, void* userData);

void Fortumo_MakePayment(Fortumo_PaymentRequest* request, Fortumo_Payment_Callback callback, void* userData);

Fortumo_PaymentRequest* Fortumo_PaymentRequest_Create();

void Fortumo_PaymentRequest_SetService(Fortumo_PaymentRequest* request, const char* serviceId, const char* appSecret);

void Fortumo_PaymentRequest_SetConsumable(Fortumo_PaymentRequest* request, s3eBool consumable);

void Fortumo_PaymentRequest_SetCreditsMultiplier(Fortumo_PaymentRequest* request, double value);

void Fortumo_PaymentRequest_SetDisplayString(Fortumo_PaymentRequest* request, const char* value);

void Fortumo_PaymentRequest_SetIcon(Fortumo_PaymentRequest* request, s3e_int32_t iconId);

void Fortumo_PaymentRequest_SetPriceAmount(Fortumo_PaymentRequest* request, const char* value);

void Fortumo_PaymentRequest_SetPriceCurrency(Fortumo_PaymentRequest* request, const char* value);

void Fortumo_PaymentRequest_SetProductName(Fortumo_PaymentRequest* request, const char* value);

void Fortumo_PaymentRequest_Delete(Fortumo_PaymentRequest* request);

Fortumo_BillingStatus Fortumo_PaymentResponse_GetBillingStatus(Fortumo_PaymentResponse* response);

const char* Fortumo_PaymentResponse_GetCreditAmount(Fortumo_PaymentResponse* response);

const char* Fortumo_PaymentResponse_GetCreditName(Fortumo_PaymentResponse* response);

const char* Fortumo_PaymentResponse_GetPaymentCode(Fortumo_PaymentResponse* response);

const char* Fortumo_PaymentResponse_GetPriceAmount(Fortumo_PaymentResponse* response);

const char* Fortumo_PaymentResponse_GetPriceCurrency(Fortumo_PaymentResponse* response);

const char* Fortumo_PaymentResponse_GetProductName(Fortumo_PaymentResponse* response);

const char* Fortumo_PaymentResponse_GetMessageId(Fortumo_PaymentResponse* response);

const char* Fortumo_PaymentResponse_GetServiceId(Fortumo_PaymentResponse* response);

const char* Fortumo_PaymentResponse_GetUserId(Fortumo_PaymentResponse* response);

void Fortumo_PaymentResponse_Delete(Fortumo_PaymentResponse* response);

Fortumo_ServiceRequest* Fortumo_ServiceRequest_Create();

void Fortumo_ServiceRequest_SetService(Fortumo_ServiceRequest* request, const char* serviceId, const char* appSecret);

void Fortumo_ServiceRequest_SetTimeout(Fortumo_ServiceRequest* request, s3e_int32_t timeout);

void Fortumo_ServiceRequest_Delete(Fortumo_ServiceRequest* request);

const char* Fortumo_ServiceResponse_GetServiceId(Fortumo_ServiceResponse* response);

Fortumo_ServiceStatus Fortumo_ServiceResponse_GetServiceStatus(Fortumo_ServiceResponse* response);

s3e_int32_t Fortumo_ServiceResponse_GetPaymentCount(Fortumo_ServiceResponse* response);

Fortumo_PaymentResponse* Fortumo_ServiceResponse_GetPaymentAtIndex(Fortumo_ServiceResponse* response, s3e_int32_t index);

void Fortumo_ServiceResponse_Delete(Fortumo_ServiceResponse* response);

void Fortumo_FindService(Fortumo_ServiceRequest* request, Fortumo_Service_Callback callback, void* userData);

void Fortumo_FindPaymentHistory(Fortumo_ServiceRequest* request, Fortumo_Service_Callback callback, void* userData);

S3E_END_C_DECL


#endif /* !S3E_EXT_FORTUMO_H */
