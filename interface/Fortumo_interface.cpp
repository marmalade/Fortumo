/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"

#include "Fortumo.h"

/**
 * Definitions for functions types passed to/from s3eExt interface
 */
typedef  s3eResult(*FortumoRegister_t)(FortumoCallback cbid, s3eCallback fn, void* userData);
typedef  s3eResult(*FortumoUnRegister_t)(FortumoCallback cbid, s3eCallback fn);
typedef  s3eResult(*FortumoRequestPayment_t)(bool isConsumable, int creditsMultiplier, const char* displayString, const char* productName, const char* serviceId, const char* serviceSecret, const char* SKU);
typedef       void(*FortumoTerminate_t)();
typedef  s3eResult(*FortumoInit_t)();

/**
 * struct that gets filled in by FortumoRegister
 */
typedef struct FortumoFuncs
{
    FortumoRegister_t m_FortumoRegister;
    FortumoUnRegister_t m_FortumoUnRegister;
    FortumoRequestPayment_t m_FortumoRequestPayment;
    FortumoTerminate_t m_FortumoTerminate;
    FortumoInit_t m_FortumoInit;
} FortumoFuncs;

static FortumoFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xbab0f5b1, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE, "error loading extension: Fortumo");
        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xbab0f5b1, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool FortumoAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult FortumoRegister(FortumoCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(FORTUMO_VERBOSE, ("calling Fortumo[0] func: FortumoRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_FortumoRegister(cbid, fn, userData);
}

s3eResult FortumoUnRegister(FortumoCallback cbid, s3eCallback fn)
{
    IwTrace(FORTUMO_VERBOSE, ("calling Fortumo[1] func: FortumoUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_FortumoUnRegister(cbid, fn);
}

s3eResult FortumoRequestPayment(bool isConsumable, int creditsMultiplier, const char* displayString, const char* productName, const char* serviceId, const char* serviceSecret, const char* SKU)
{
    IwTrace(FORTUMO_VERBOSE, ("calling Fortumo[2] func: FortumoRequestPayment"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_FortumoRequestPayment(isConsumable, creditsMultiplier, displayString, productName, serviceId, serviceSecret, SKU);
}

void FortumoTerminate()
{
    IwTrace(FORTUMO_VERBOSE, ("calling Fortumo[3] func: FortumoTerminate"));

    if (!_extLoad())
        return;

    g_Ext.m_FortumoTerminate();
}

s3eResult FortumoInit()
{
    IwTrace(FORTUMO_VERBOSE, ("calling Fortumo[4] func: FortumoInit"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

    return g_Ext.m_FortumoInit();
}
